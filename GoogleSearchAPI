import re
import pandas as pd
import requests

def build_payload(query, start=1, num=10, date_restrict='m1', **params):
    payload = {
        'key': KEY,
        'q': query,
        'cx': SEARCH_ENGINE_ID,
        'start': start,
        'num': num,
        'date_restrict': date_restrict
    }

    payload.update(params)
    return payload


def make_request(payload):
    response = requests.get('https://www.googleapis.com/customsearch/v1', params=payload)
    if response.status_code != 200:
        raise Exception('Request Failed')
    return response.json()


def clean_filename(filename):
    filename = re.sub(r'[\\/*?:"<>|]', "", filename)
    return filename


def main(query, result_total=10):
    items = []
    remainder = result_total % 10
    if remainder > 0:
        pages = (result_total // 10) + 1
    else:
        pages = result_total // 10

    for i in range(pages):
        if pages == i + 1 and remainder > 0:
            payload = build_payload(query, start=(i + 1) * 10, num=remainder)
        else:
            payload = build_payload(query, start=(i + 1) * 10)

        response = make_request(payload)
        items.extend(response['items'])

    query_string_clean = clean_filename(query)
    df = pd.json_normalize(items)
    df.to_excel(f'Google_Search_Result_{query_string_clean}.xlsx', index=False)


if __name__ == '__main__':
    KEY = 'AIzaSyBOFMdjxaL5J_LOhJQVg02hh7KpsGbogV4'
    SEARCH_ENGINE_ID = 'f3b22071cefd749a8'
    search_query = 'ChatGPT'
    total_results = 35
    main(search_query, total_results)


